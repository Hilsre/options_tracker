# Portainer-optimized docker-compose.yml

services:
  options-tracker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: options-tracker-app
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_FILE_WATCHER_TYPE=none
      - DATABASE_PATH=/app/data/options_tracker.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backup-service:
    image: alpine:latest
    container_name: options-tracker-backup
    volumes:
      - ./data:/source/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_INTERVAL=24h
    command: |
      sh -c "
        while true; do
          echo 'Creating backup...'
          timestamp=$$(date +%Y%m%d_%H%M%S)
          cp /source/data/options_tracker.db /backups/backup_$$timestamp.db
          # Alte Backups löschen (älter als 30 Tage)
          find /backups -name '*.db' -mtime +30 -delete
          echo 'Backup completed'
          sleep $$BACKUP_INTERVAL
        done
      "
    depends_on:
      - options-tracker
    restart: unless-stopped

networks:
  default:
    name: options-tracker-network
