version: '3.8'

services:
  options-tracker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: options-tracker-app
    ports:
      - "8501:8501"  # Streamlit Standard-Port
    volumes:
      # Persistenter Speicher für SQLite-Datenbank
      - ./data:/app/data
      # Optional: Logs persistent speichern
      - ./logs:/app/logs
    environment:
      # Streamlit-Konfiguration
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      # Datenbank-Pfad (falls konfigurierbar)
      - DATABASE_PATH=/app/data/options_tracker.db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - options-network

  # Optional: Backup-Service für die Datenbank
  db-backup:
    image: alpine:latest
    container_name: options-tracker-backup
    volumes:
      - ./data:/app/data
      - ./backups:/app/backups
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        while true; do
          if [ -f /app/data/options_tracker.db ]; then
            timestamp=$$(date +%Y%m%d_%H%M%S)
            sqlite3 /app/data/options_tracker.db '.backup /app/backups/options_tracker_backup_'$$timestamp'.db'
            echo 'Backup created: options_tracker_backup_'$$timestamp'.db'
            # Alte Backups löschen (älter als 30 Tage)
            find /app/backups -name '*.db' -mtime +30 -delete
          fi
          sleep 86400  # Täglich um Mitternacht
        done
      "
    restart: unless-stopped
    depends_on:
      - options-tracker
    networks:
      - options-network

networks:
  options-network:
    driver: bridge

volumes:
  # Explizite Volume-Definition für bessere Kontrolle
  options-data:
    driver: local
